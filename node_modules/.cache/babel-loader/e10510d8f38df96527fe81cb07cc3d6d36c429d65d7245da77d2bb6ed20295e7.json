{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTIK\\\\Downloads\\\\assignment\\\\src\\\\components\\\\Transcription.js\",\n  _s = $RefreshSig$();\n// src/components/Transcription.js\nimport React, { useState } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcription = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleAudioStream = audioBlob => {\n    const apiKey = 'YOUR_DEEPGRAM_API_KEY';\n    const socket = new W3CWebSocket(`wss://api.deepgram.com/v1/listen?access_token=${apiKey}`);\n    socket.onopen = () => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(audioBlob);\n      reader.onloadend = () => {\n        const audioArrayBuffer = reader.result;\n        socket.send(audioArrayBuffer);\n      };\n    };\n    socket.onmessage = message => {\n      const data = JSON.parse(message.data);\n      if (data && data.channel && data.channel.alternatives[0].transcript) {\n        setTranscript(prevTranscript => prevTranscript + ' ' + data.channel.alternatives[0].transcript);\n      }\n    };\n    socket.onerror = error => {\n      setErrorMessage('Error with transcription service.');\n      console.error('WebSocket error:', error);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Transcription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Microphone, {\n      handleAudioStream: handleAudioStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Transcription, \"9gwD1BX790ip3ywZux0qjATWgGo=\");\n_c = Transcription;\nexport default Transcription;\nvar _c;\n$RefreshReg$(_c, \"Transcription\");","map":{"version":3,"names":["React","useState","w3cwebsocket","W3CWebSocket","jsxDEV","_jsxDEV","Transcription","_s","transcript","setTranscript","errorMessage","setErrorMessage","handleAudioStream","audioBlob","apiKey","socket","onopen","reader","FileReader","readAsArrayBuffer","onloadend","audioArrayBuffer","result","send","onmessage","message","data","JSON","parse","channel","alternatives","prevTranscript","onerror","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Microphone","className","_c","$RefreshReg$"],"sources":["C:/Users/KARTIK/Downloads/assignment/src/components/Transcription.js"],"sourcesContent":["// src/components/Transcription.js\r\nimport React, { useState } from 'react';\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\r\n\r\n\r\nconst Transcription = () => {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleAudioStream = (audioBlob) => {\r\n    const apiKey = 'YOUR_DEEPGRAM_API_KEY';\r\n    const socket = new W3CWebSocket(\r\n      `wss://api.deepgram.com/v1/listen?access_token=${apiKey}`\r\n    );\r\n\r\n    socket.onopen = () => {\r\n      const reader = new FileReader();\r\n      reader.readAsArrayBuffer(audioBlob);\r\n      reader.onloadend = () => {\r\n        const audioArrayBuffer = reader.result;\r\n        socket.send(audioArrayBuffer);\r\n      };\r\n    };\r\n\r\n    socket.onmessage = (message) => {\r\n      const data = JSON.parse(message.data);\r\n      if (data && data.channel && data.channel.alternatives[0].transcript) {\r\n        setTranscript((prevTranscript) => prevTranscript + ' ' + data.channel.alternatives[0].transcript);\r\n      }\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      setErrorMessage('Error with transcription service.');\r\n      console.error('WebSocket error:', error);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Live Transcription</h2>\r\n      <Microphone handleAudioStream={handleAudioStream} />\r\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n      <div className=\"transcript-box\">\r\n        <p>{transcript}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transcription;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,IAAIC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,iBAAiB,GAAIC,SAAS,IAAK;IACvC,MAAMC,MAAM,GAAG,uBAAuB;IACtC,MAAMC,MAAM,GAAG,IAAIZ,YAAY,CAC7B,iDAAiDW,MAAM,EACzD,CAAC;IAEDC,MAAM,CAACC,MAAM,GAAG,MAAM;MACpB,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,iBAAiB,CAACN,SAAS,CAAC;MACnCI,MAAM,CAACG,SAAS,GAAG,MAAM;QACvB,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,MAAM;QACtCP,MAAM,CAACQ,IAAI,CAACF,gBAAgB,CAAC;MAC/B,CAAC;IACH,CAAC;IAEDN,MAAM,CAACS,SAAS,GAAIC,OAAO,IAAK;MAC9B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;MACrC,IAAIA,IAAI,IAAIA,IAAI,CAACG,OAAO,IAAIH,IAAI,CAACG,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAACtB,UAAU,EAAE;QACnEC,aAAa,CAAEsB,cAAc,IAAKA,cAAc,GAAG,GAAG,GAAGL,IAAI,CAACG,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,CAACtB,UAAU,CAAC;MACnG;IACF,CAAC;IAEDO,MAAM,CAACiB,OAAO,GAAIC,KAAK,IAAK;MAC1BtB,eAAe,CAAC,mCAAmC,CAAC;MACpDuB,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;EACH,CAAC;EAED,oBACE5B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlC,OAAA,CAACmC,UAAU;MAAC5B,iBAAiB,EAAEA;IAAkB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnD7B,YAAY,iBAAIL,OAAA;MAAGoC,SAAS,EAAC,OAAO;MAAAN,QAAA,EAAEzB;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDlC,OAAA;MAAKoC,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7B9B,OAAA;QAAA8B,QAAA,EAAI3B;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1CID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}